{"version":3,"sources":["scripts/main.js"],"names":["inputCollection","document","querySelectorAll","firstForm","querySelector","firstElementChild","children","slice","secondForm","lastElementChild","stringMod","str","res","i","length","toUpperCase","inpt","name","setAttribute","newlabel","item","createElement","className","htmlFor","id","innerText","labelsArray","map","labelInsert","divArr","labArr","append"],"mappings":"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","file":"main.96674f4c.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst inputCollection = [...document.querySelectorAll('input')];\n\nconst firstForm = [...document.querySelector('.login-wrap')\n  .firstElementChild.children].slice(0, 4);\n\nconst secondForm = [...document.querySelector('.login-wrap')\n  .lastElementChild.children].slice(0, 2);\n\nfunction stringMod(str) {\n  let res = '';\n\n  for (let i = 0; i < str.length; i++) {\n    if (str[i] === str[i].toUpperCase()) {\n      res += ' ' + str[i];\n    } else {\n      res += str[i];\n    }\n  }\n\n  return res[0].toUpperCase() + res.slice(1);\n}\n\nfor (const inpt of inputCollection) {\n  inpt.name = stringMod(inpt.name);\n  inpt.setAttribute('placeholder', `${inpt.name}`);\n}\n\nfunction newlabel(inpt) {\n  const item = document.createElement('label');\n\n  item.className = 'field-label';\n  item.htmlFor = `${inpt.id}`;\n  item.innerText = `${inpt.name}`;\n\n  return item;\n}\n\nconst labelsArray = inputCollection.map(newlabel);\n\nfunction labelInsert(divArr, labArr) {\n  for (let i = 0; i < divArr.length; i++) {\n    divArr[i].append(labArr[i]);\n  }\n}\n\nlabelInsert(firstForm, labelsArray.slice(0, 4));\nlabelInsert(secondForm, labelsArray.slice(4));\n"]}